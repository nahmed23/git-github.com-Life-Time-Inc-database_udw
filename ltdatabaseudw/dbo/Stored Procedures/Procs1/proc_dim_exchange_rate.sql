CREATE PROC [dbo].[proc_dim_exchange_rate] @dv_batch_id [varchar](500) AS begin   set xact_abort on set nocount on  declare @max_dv_batch_id bigint = (select max(isnull(dv_batch_id,-1)) from dim_exchange_rate) declare @current_dv_batch_id bigint = @dv_batch_id declare @load_dv_batch_id bigint = case when @max_dv_batch_id < @current_dv_batch_id then @max_dv_batch_id else @current_dv_batch_id end  if object_id('tempdb..#dim_exchange_rate') is not null drop table #dim_exchange_rate create table dbo.#dim_exchange_rate with(distribution = hash(effective_dim_date_key), location=user_db, heap) as select case when d_forexintegration_exchange_rate.bk_hash in ('-997','-998','-999') then d_forexintegration_exchange_rate.bk_hash        else convert(char(32),hashbytes('md5',('P%#&z$@k'+isnull(d_forexintegration_exchange_rate.effective_dim_date_key,'z#@$k%&P')+                                          'P%#&z$@k'+isnull(d_forexintegration_exchange_rate.from_currency_code,'z#@$k%&P')+                                          'P%#&z$@k'+isnull(d_forexintegration_exchange_rate.to_currency_code,'z#@$k%&P')+                                          'P%#&z$@k'+isnull(d_forexintegration_exchange_rate.exchange_rate_type_description,'z#@$k%&P'))),2) end dim_exchange_rate_key,        d_forexintegration_exchange_rate.effective_date effective_date,        d_forexintegration_exchange_rate.effective_dim_date_key effective_dim_date_key,        d_forexintegration_exchange_rate.from_currency_code from_currency_code,        d_forexintegration_exchange_rate.to_currency_code to_currency_code,        d_forexintegration_exchange_rate.exchange_rate_type_description exchange_rate_type_description,        d_forexintegration_exchange_rate.exchange_rate exchange_rate,        d_forexintegration_exchange_rate.source_daily_average_date source_daily_average_date,        d_forexintegration_exchange_rate.dv_load_date_time,        d_forexintegration_exchange_rate.dv_load_end_date_time,        d_forexintegration_exchange_rate.dv_batch_id,        getdate() dv_inserted_date_time,        suser_sname() dv_insert_user   from d_forexintegration_exchange_rate  where d_forexintegration_exchange_rate.dv_batch_id >= @load_dv_batch_id  /* Delete and re-insert*/ /* Do as a single transaction*/ /*   Delete records from the dim table that exist*/ /*   Insert records from current and missing batches*/  begin tran    delete dbo.dim_exchange_rate    where dim_exchange_rate_key in (select dim_exchange_rate_key from #dim_exchange_rate)    insert dim_exchange_rate(            dim_exchange_rate_key,            effective_date,            effective_dim_date_key,            from_currency_code,            to_currency_code,            exchange_rate_type_description,            exchange_rate,            source_daily_average_date,            dv_load_date_time,            dv_load_end_date_time,            dv_batch_id,            dv_inserted_date_time,            dv_insert_user)   select dim_exchange_rate_key,          effective_date,          effective_dim_date_key,          from_currency_code,          to_currency_code,          exchange_rate_type_description,          exchange_rate,          source_daily_average_date,          dv_load_date_time,          dv_load_end_date_time,          dv_batch_id,          dv_inserted_date_time,          dv_insert_user     from #dim_exchange_rate  commit tran  /* Find any records that are missing from the current year and next year and insert default records*/  if object_id('tempdb..#from_currency_code_to_currency_code') is not null drop table #from_currency_code_to_currency_code create table dbo.#from_currency_code_to_currency_code with(distribution=round_robin, location=user_db, heap) as select 'CAD' from_currency_code,        'USD' to_currency_code  union select 'USD' from_currency_code,        'CAD' to_currency_code  union select 'USD' from_currency_code,        'USD' to_currency_code  union select 'CAD' from_currency_code,        'CAD' to_currency_code  if object_id('tempdb..#exchange_rate_type_description_list') is not null drop table #exchange_rate_type_description_list create table dbo.#exchange_rate_type_description_list with(distribution=round_robin, location=user_db, heap) as select 'Daily Exchange Rate' exchange_rate_type_description  union select 'Monthly Average Exchange Rate'  union select 'End of Month Exchange Rate'  if object_id('tempdb..#missing_record') is not null drop table #missing_record create table dbo.#missing_record with(distribution = hash(dim_exchange_rate_key), location=user_db, heap) as select /*util_bk_hash[dim_date.calendar_date,h_forexintegration_exchange_rate.effective_date,#from_currency_code_to_currency_code.from_currency_code,h_forexintegration_exchange_rate.from_exchange_rate_iso_code,#from_currency_code_to_currency_code.to_currency_code,h_forexintegration_exchange_rate.to_exchange_rate_iso_code,#exchange_rate_type_description_list.exchange_rate_type_description,h_forexintegration_exchange_rate.rate_type]*/        convert(char(32),hashbytes('md5',('P%#&z$@k'+isnull(convert(varchar,dim_date.calendar_date,112),'z#@$k%&P')+                                          'P%#&z$@k'+isnull(#from_currency_code_to_currency_code.from_currency_code,'z#@$k%&P')+                                          'P%#&z$@k'+isnull(#from_currency_code_to_currency_code.to_currency_code,'z#@$k%&P')+                                          'P%#&z$@k'+isnull(#exchange_rate_type_description_list.exchange_rate_type_description,'z#@$k%&P'))),2) dim_exchange_rate_key,        dim_date.calendar_date effective_date,        dim_date.dim_date_key effective_dim_date_key,        #from_currency_code_to_currency_code.from_currency_code,        #from_currency_code_to_currency_code.to_currency_code,        #exchange_rate_type_description_list.exchange_rate_type_description,        1.0 exchange_rate,        'Jan 1, 1900' source_daily_average_date,        'Jan 1, 1900' dv_load_date_time,        'Dec 31, 9999' dv_load_end_date_time,        @dv_batch_id dv_batch_id,        getdate() dv_inserted_date_time,        suser_sname() dv_insert_user   from marketing.v_dim_date dim_date  cross join #from_currency_code_to_currency_code  cross join #exchange_rate_type_description_list   left join dim_exchange_rate     on dim_date.calendar_date = dim_exchange_rate.effective_date    and #from_currency_code_to_currency_code.from_currency_code = dim_exchange_rate.from_currency_code    and #from_currency_code_to_currency_code.to_currency_code = dim_exchange_rate.to_currency_code    and #exchange_rate_type_description_list.exchange_rate_type_description = dim_exchange_rate.exchange_rate_type_description  where (year >= datepart(yyyy,'1998-01-01 00:00:00.000')         and  year <= datepart(yyyy,getdate()) + 1)    and dim_exchange_rate.dim_exchange_rate_id is null   delete from #missing_record  where effective_date > = '1998-01-01 00:00:00.000'    and effective_date <= '2009-12-31 00:00:00.000'  and ( (from_currency_code = 'USD' and to_currency_code = 'CAD')       or (from_currency_code = 'CAD' and to_currency_code = 'USD')        or (from_currency_code = 'CAD' and to_currency_code = 'CAD'))  insert dim_exchange_rate(          dim_exchange_rate_key,          effective_date,          effective_dim_date_key,          from_currency_code,          to_currency_code,          exchange_rate_type_description,          exchange_rate,          source_daily_average_date,          dv_load_date_time,          dv_load_end_date_time,          dv_batch_id,          dv_inserted_date_time,          dv_insert_user) select dim_exchange_rate_key,        effective_date,        effective_dim_date_key,        from_currency_code,        to_currency_code,        exchange_rate_type_description,        exchange_rate,        source_daily_average_date,        dv_load_date_time,        dv_load_end_date_time,        dv_batch_id,        dv_inserted_date_time,        dv_insert_user   from #missing_record  /* Propogate data forward for future dates*/  if object_id('tempdb..#future_record') is not null drop table #future_record create table dbo.#future_record with(distribution = hash(dim_exchange_rate_key), location=user_db, heap) as with /* For each combination there may be more than one record with the most recent source_daily_average_date so get the max effective_date as well*/ max_source_daily_average_date (row_num, max_effective_date, effective_dim_date_key, from_currency_code, to_currency_code, exchange_rate_type_description, exchange_rate) as    (select row_number() over(partition by from_currency_code, to_currency_code, exchange_rate_type_description order by source_daily_average_date desc, effective_date desc) row_num,            effective_date max_effective_date,            effective_dim_date_key,            from_currency_code,            to_currency_code,            exchange_rate_type_description,            exchange_rate       from dim_exchange_rate      where dim_exchange_rate_key not in ('-999','-998','-997')        and from_currency_code != to_currency_code    ) select dim_exchange_rate.dim_exchange_rate_key,        dim_exchange_rate.effective_date,        dim_exchange_rate.effective_dim_date_key,        dim_exchange_rate.from_currency_code,        dim_exchange_rate.to_currency_code,        dim_exchange_rate.exchange_rate_type_description,        max_source_daily_average_date.exchange_rate   from dim_exchange_rate   join max_source_daily_average_date     on dim_exchange_rate.effective_date > max_source_daily_average_date.max_effective_date    and dim_exchange_rate.from_currency_code = max_source_daily_average_date.from_currency_code    and dim_exchange_rate.to_currency_code = max_source_daily_average_date.to_currency_code    and dim_exchange_rate.exchange_rate_type_description = max_source_daily_average_date.exchange_rate_type_description    and max_source_daily_average_date.row_num = 1  /*Do as a single transaction*/ /*  Delete future records from the dim table*/ /*  Insert future records*/ begin tran    delete dbo.dim_exchange_rate    where dim_exchange_rate_key in (select dim_exchange_rate_key from #future_record)    insert dim_exchange_rate(            dim_exchange_rate_key,            effective_date,            effective_dim_date_key,            from_currency_code,            to_currency_code,            exchange_rate_type_description,            exchange_rate,            source_daily_average_date,            dv_load_date_time,            dv_load_end_date_time,            dv_batch_id,            dv_inserted_date_time,            dv_insert_user)   select dim_exchange_rate_key,          effective_date,          effective_dim_date_key,          from_currency_code,          to_currency_code,          exchange_rate_type_description,          exchange_rate,          'Jan 1, 1900' source_daily_average_date,          'Jan 1, 1900' dv_load_date_time,          'Dec 31, 9999' dv_load_end_date_time,          @dv_batch_id dv_batch_id,          getdate() dv_inserted_date_time,          suser_sname() dv_insert_user     from #future_record  commit tran  end   